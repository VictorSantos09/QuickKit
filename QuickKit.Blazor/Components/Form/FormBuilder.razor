@using QuickKit.Blazor.Components.Grid
@using QuickKit.Blazor.Components.Input
@typeparam TModel

<div class="rz-p-0 rz-p-md-12">
    <RadzenTemplateForm TItem="TModel"
                        Data="@Model"
                        Submit="@OnValidSubmit"
                        InvalidSubmit="@OnInvalidSubmit"
                        class="rz-p-3 rz-shadow-2">
        <!--TItle-->
        <RadzenText Text="@Title" TextStyle="TextStyle.DisplayH4" />

        <!--Row-->
        <RadzenRow JustifyContent="RowBuilder.DEFAULT_JUSTIFY"
                   AlignItems="RowBuilder.DEFAULT_ALIGNEMENT"
                   Gap="@RowBuilder.DEFAULT_GAP"
                   RowGap="@RowBuilder.DEFAULT_GAP">

            <!--Column-->
            @foreach (var field in FieldConfigs)
            {
                @if (field.SingleLine || IsTextArea(field.InputType))
                {
                    <ColumnBuilder ColumnSize="ColumnBuilder.COLUMN_MAX_SIZE" FieldConfig="field" />
                }
                else
                {
                    <ColumnBuilder ColumnSize="@ColumnSize" FieldConfig="field" />
                    @*  <RadzenColumn>
            <RadzenFormField AllowFloatingLabel="true"
            Text="@field.Name"
            Visible="@field.Visible">
            <ChildContent>
            <ColumnBuilder ColumnSize="@ColumnSize" FieldConfig="field" />
            </ChildContent>

            <Helper>
            @if (field.IsRequired && field.Visible)
            {
            <RadzenRequiredValidator Component="@field.PropertyName"
            Text="@field.ValidationMessage" />
            }
            </Helper>
            </RadzenFormField>
            </RadzenColumn> *@
                }
            }
        </RadzenRow>


        <RadzenButton ButtonType="ButtonType.Submit" Text="@SubmitText" class="rz-ripple rz-m-3" />
    </RadzenTemplateForm>
</div>
@code {
    [Parameter]
    public bool Popup { get; set; } = false;

    [Parameter]
    public string SubmitText { get; set; } = "Salvar";

    [Parameter]
    public int? ColumnSize { get; set; } = null;

    [Parameter, EditorRequired]
    public string Title { get; set; }

    [Parameter]
    public TModel Model { get; set; }

    [Parameter]
    public List<FieldConfig> FieldConfigs { get; set; } = new();

    [Parameter]
    public EventCallback<TModel> OnValidSubmit { get; set; }

    [Parameter]
    public EventCallback<FormInvalidSubmitEventArgs> OnInvalidSubmit { get; set; }

    private const JustifyContent DEFAULT_JUSTIFY = JustifyContent.Normal;
    private const AlignItems DEFAULT_ALIGNEMENT = AlignItems.Center;
    private const string DEFAULT_GAP = "1rem";
    private const string DEFAULT_ROWGAP = "1tem";

    private static bool IsTextArea(RadzenFormInputType inputType) => inputType == RadzenFormInputType.TextArea;
}